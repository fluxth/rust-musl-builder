name: Test and publish image

on:
  push:
    tags:
      - '*'

# See https://docs.github.com/en/actions/guides/publishing-docker-images for the
# theory, but we do some things differently.

jobs:
  # Skip tests for now
  # test_image:
  #   name: Test static linking (using stable Rust)
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2

  #     # Run some fairly extensive tests to make sure that we actually produce
  #     # static, working programs.
  #     - name: Test image
  #       run: ./test-image

  build_and_push:
    name: Build image & push
    runs-on: ubuntu-latest

    # needs:
    #   - test_image

    strategy:
      matrix:
        # We build multiple versions of the image from the same Dockerfile each
        # time we push. This is different that the standard strategy for
        # maintaining images using GitHub actions, which involves a lot of tags
        # and branches. But since there are new Rust releases far more often
        # than we change this project, it works.
        toolchain:
          - "1.61.0"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build release image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            TOOLCHAIN=${{ matrix.toolchain }}
          # Use some slightly funky substituations to tag only `stable` as `latest`.
          tags: |
            ghcr.io/fluxth/rust-musl-builder:${{ matrix.toolchain }}
          labels: |
            org.opencontainers.image.title=rust-musl-builder
            org.opencontainers.image.description=Tools for statically linked Rust programs using musl-libc
            org.opencontainers.image.url=https://github.com/fluxth/rust-musl-builder
            org.opencontainers.image.source=https://github.com/fluxth/rust-musl-builder
            net.randomhacks.rust-musl-builder.toolchain=${{ matrix.toolchain }}
